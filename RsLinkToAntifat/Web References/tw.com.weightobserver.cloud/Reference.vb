'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.42000
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
'
Namespace tw.com.weightobserver.cloud
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="AntiFatSoap11Binding", [Namespace]:="http://webservice")>  _
    Partial Public Class AntiFat
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WS_AddDxPatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddWeightRecord2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddRingRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddMemberPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateMemberPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateDietRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddDietRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddBloodSugarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddSleepRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_CreateNewUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddEarTemperatureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateWeightRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddWeightRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_SignUploadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_GetUvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateBloodSugarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddSportImageRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddForeheadTemperatureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateBloodRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddBloodRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_AddBloodSugar2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UpdateSportImageRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.RsLinkToAntifat.My.MySettings.Default.RsLinkToAntifat_tw_com_weightobserver_cloud_AntiFat
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WS_AddDxPatchCompleted As WS_AddDxPatchCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddWeightRecord2Completed As WS_AddWeightRecord2CompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddRingRecordsCompleted As WS_AddRingRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddMemberPlanCompleted As WS_AddMemberPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateMemberPlanCompleted As WS_UpdateMemberPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateDietRecordCompleted As WS_UpdateDietRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddDietRecordCompleted As WS_AddDietRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddBloodSugarCompleted As WS_AddBloodSugarCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddSleepRecordsCompleted As WS_AddSleepRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_CreateNewUserCompleted As WS_CreateNewUserCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddEarTemperatureCompleted As WS_AddEarTemperatureCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateWeightRecordCompleted As WS_UpdateWeightRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddWeightRecordCompleted As WS_AddWeightRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_SignUploadCompleted As WS_SignUploadCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_GetUvCompleted As WS_GetUvCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateBloodSugarCompleted As WS_UpdateBloodSugarCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddSportImageRecordCompleted As WS_AddSportImageRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddForeheadTemperatureCompleted As WS_AddForeheadTemperatureCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateBloodRecordCompleted As WS_UpdateBloodRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateUserCompleted As WS_UpdateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddBloodRecordCompleted As WS_AddBloodRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_AddBloodSugar2Completed As WS_AddBloodSugar2CompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UpdateSportImageRecordCompleted As WS_UpdateSportImageRecordCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddDxPatch", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddDxPatch(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String, ByVal HR As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal HRSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal S3 As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal S3Specified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal S4 As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal S4Specified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal EMAT As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal EMATSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal SDI As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal SDISpecified As Boolean, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddDxPatch", New Object() {strUserAccount, datRecordTime, HR, HRSpecified, S3, S3Specified, S4, S4Specified, EMAT, EMATSpecified, SDI, SDISpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddDxPatchAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal HR As Integer, ByVal HRSpecified As Boolean, ByVal S3 As System.Nullable(Of Decimal), ByVal S3Specified As Boolean, ByVal S4 As System.Nullable(Of Decimal), ByVal S4Specified As Boolean, ByVal EMAT As System.Nullable(Of Decimal), ByVal EMATSpecified As Boolean, ByVal SDI As System.Nullable(Of Decimal), ByVal SDISpecified As Boolean)
            Me.WS_AddDxPatchAsync(strUserAccount, datRecordTime, HR, HRSpecified, S3, S3Specified, S4, S4Specified, EMAT, EMATSpecified, SDI, SDISpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddDxPatchAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal HR As Integer, ByVal HRSpecified As Boolean, ByVal S3 As System.Nullable(Of Decimal), ByVal S3Specified As Boolean, ByVal S4 As System.Nullable(Of Decimal), ByVal S4Specified As Boolean, ByVal EMAT As System.Nullable(Of Decimal), ByVal EMATSpecified As Boolean, ByVal SDI As System.Nullable(Of Decimal), ByVal SDISpecified As Boolean, ByVal userState As Object)
            If (Me.WS_AddDxPatchOperationCompleted Is Nothing) Then
                Me.WS_AddDxPatchOperationCompleted = AddressOf Me.OnWS_AddDxPatchOperationCompleted
            End If
            Me.InvokeAsync("WS_AddDxPatch", New Object() {strUserAccount, datRecordTime, HR, HRSpecified, S3, S3Specified, S4, S4Specified, EMAT, EMATSpecified, SDI, SDISpecified}, Me.WS_AddDxPatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddDxPatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddDxPatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddDxPatchCompleted(Me, New WS_AddDxPatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddWeightRecord2", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddWeightRecord2( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floButtocksSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floRateOfBoneSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floSoftLeanMassSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTotalBodyWaterSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floHeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floHeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floBMI As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floBMISpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddWeightRecord2", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, floHeight, floHeightSpecified, floBMI, floBMISpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddWeightRecord2Async( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal floBMI As System.Nullable(Of Decimal),  _
                    ByVal floBMISpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_AddWeightRecord2Async(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, floHeight, floHeightSpecified, floBMI, floBMISpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddWeightRecord2Async( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal floBMI As System.Nullable(Of Decimal),  _
                    ByVal floBMISpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_AddWeightRecord2OperationCompleted Is Nothing) Then
                Me.WS_AddWeightRecord2OperationCompleted = AddressOf Me.OnWS_AddWeightRecord2OperationCompleted
            End If
            Me.InvokeAsync("WS_AddWeightRecord2", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, floHeight, floHeightSpecified, floBMI, floBMISpecified, strMemo}, Me.WS_AddWeightRecord2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddWeightRecord2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddWeightRecord2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddWeightRecord2Completed(Me, New WS_AddWeightRecord2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddRingRecords", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddRingRecords(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String, ByVal intSportType As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportTypeSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strRecordData As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strAutoMeasure As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strStoredRecords As String, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddRingRecords", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intSportType, intSportTypeSpecified, strRecordData, strAutoMeasure, strMemo, strStoredRecords})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddRingRecordsAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intSportType As Integer, ByVal intSportTypeSpecified As Boolean, ByVal strRecordData As String, ByVal strAutoMeasure As String, ByVal strMemo As String, ByVal strStoredRecords As String)
            Me.WS_AddRingRecordsAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intSportType, intSportTypeSpecified, strRecordData, strAutoMeasure, strMemo, strStoredRecords, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddRingRecordsAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intSportType As Integer, ByVal intSportTypeSpecified As Boolean, ByVal strRecordData As String, ByVal strAutoMeasure As String, ByVal strMemo As String, ByVal strStoredRecords As String, ByVal userState As Object)
            If (Me.WS_AddRingRecordsOperationCompleted Is Nothing) Then
                Me.WS_AddRingRecordsOperationCompleted = AddressOf Me.OnWS_AddRingRecordsOperationCompleted
            End If
            Me.InvokeAsync("WS_AddRingRecords", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intSportType, intSportTypeSpecified, strRecordData, strAutoMeasure, strMemo, strStoredRecords}, Me.WS_AddRingRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddRingRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddRingRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddRingRecordsCompleted(Me, New WS_AddRingRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddMemberPlan", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddMemberPlan( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal bolisMaleSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floHeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floHeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datStartdate As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datEnddate As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtweight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtweightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgweight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgweightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtButtocksSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportOneMinSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datBreakfristST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datBreakfristET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datLunchST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datLunchET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datDinnerST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datDinnerET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenST1 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenET1 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenST2 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intReducingCalorieSpecified As Boolean,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddMemberPlan", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddMemberPlanAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal datStartdate As String,  _
                    ByVal datEnddate As String,  _
                    ByVal floFtweight As System.Nullable(Of Decimal),  _
                    ByVal floFtweightSpecified As Boolean,  _
                    ByVal floTgweight As System.Nullable(Of Decimal),  _
                    ByVal floTgweightSpecified As Boolean,  _
                    ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floFtBodyFatSpecified As Boolean,  _
                    ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floTgBodyFatSpecified As Boolean,  _
                    ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    ByVal floFtWaistlineSpecified As Boolean,  _
                    ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    ByVal floTgWaistlineSpecified As Boolean,  _
                    ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    ByVal floFtButtocksSpecified As Boolean,  _
                    ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    ByVal intSportOneMinSpecified As Boolean,  _
                    ByVal datBreakfristST As String,  _
                    ByVal datBreakfristET As String,  _
                    ByVal datLunchST As String,  _
                    ByVal datLunchET As String,  _
                    ByVal datDinnerST As String,  _
                    ByVal datDinnerET As String,  _
                    ByVal datForbiddenST1 As String,  _
                    ByVal datForbiddenET1 As String,  _
                    ByVal datForbiddenST2 As String,  _
                    ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    ByVal intReducingCalorieSpecified As Boolean)
            Me.WS_AddMemberPlanAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddMemberPlanAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal datStartdate As String,  _
                    ByVal datEnddate As String,  _
                    ByVal floFtweight As System.Nullable(Of Decimal),  _
                    ByVal floFtweightSpecified As Boolean,  _
                    ByVal floTgweight As System.Nullable(Of Decimal),  _
                    ByVal floTgweightSpecified As Boolean,  _
                    ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floFtBodyFatSpecified As Boolean,  _
                    ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floTgBodyFatSpecified As Boolean,  _
                    ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    ByVal floFtWaistlineSpecified As Boolean,  _
                    ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    ByVal floTgWaistlineSpecified As Boolean,  _
                    ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    ByVal floFtButtocksSpecified As Boolean,  _
                    ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    ByVal intSportOneMinSpecified As Boolean,  _
                    ByVal datBreakfristST As String,  _
                    ByVal datBreakfristET As String,  _
                    ByVal datLunchST As String,  _
                    ByVal datLunchET As String,  _
                    ByVal datDinnerST As String,  _
                    ByVal datDinnerET As String,  _
                    ByVal datForbiddenST1 As String,  _
                    ByVal datForbiddenET1 As String,  _
                    ByVal datForbiddenST2 As String,  _
                    ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    ByVal intReducingCalorieSpecified As Boolean,  _
                    ByVal userState As Object)
            If (Me.WS_AddMemberPlanOperationCompleted Is Nothing) Then
                Me.WS_AddMemberPlanOperationCompleted = AddressOf Me.OnWS_AddMemberPlanOperationCompleted
            End If
            Me.InvokeAsync("WS_AddMemberPlan", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified}, Me.WS_AddMemberPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddMemberPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddMemberPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddMemberPlanCompleted(Me, New WS_AddMemberPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateMemberPlan", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateMemberPlan( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal bolisMaleSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floHeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floHeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datStartdate As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datEnddate As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtweight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtweightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgweight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgweightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floFtButtocksSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportOneMinSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datBreakfristST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datBreakfristET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datLunchST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datLunchET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datDinnerST As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datDinnerET As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenST1 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenET1 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenST2 As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intReducingCalorieSpecified As Boolean,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateMemberPlan", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateMemberPlanAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal datStartdate As String,  _
                    ByVal datEnddate As String,  _
                    ByVal floFtweight As System.Nullable(Of Decimal),  _
                    ByVal floFtweightSpecified As Boolean,  _
                    ByVal floTgweight As System.Nullable(Of Decimal),  _
                    ByVal floTgweightSpecified As Boolean,  _
                    ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floFtBodyFatSpecified As Boolean,  _
                    ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floTgBodyFatSpecified As Boolean,  _
                    ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    ByVal floFtWaistlineSpecified As Boolean,  _
                    ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    ByVal floTgWaistlineSpecified As Boolean,  _
                    ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    ByVal floFtButtocksSpecified As Boolean,  _
                    ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    ByVal intSportOneMinSpecified As Boolean,  _
                    ByVal datBreakfristST As String,  _
                    ByVal datBreakfristET As String,  _
                    ByVal datLunchST As String,  _
                    ByVal datLunchET As String,  _
                    ByVal datDinnerST As String,  _
                    ByVal datDinnerET As String,  _
                    ByVal datForbiddenST1 As String,  _
                    ByVal datForbiddenET1 As String,  _
                    ByVal datForbiddenST2 As String,  _
                    ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    ByVal intReducingCalorieSpecified As Boolean)
            Me.WS_UpdateMemberPlanAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateMemberPlanAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal floHeight As System.Nullable(Of Decimal),  _
                    ByVal floHeightSpecified As Boolean,  _
                    ByVal datStartdate As String,  _
                    ByVal datEnddate As String,  _
                    ByVal floFtweight As System.Nullable(Of Decimal),  _
                    ByVal floFtweightSpecified As Boolean,  _
                    ByVal floTgweight As System.Nullable(Of Decimal),  _
                    ByVal floTgweightSpecified As Boolean,  _
                    ByVal floFtBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floFtBodyFatSpecified As Boolean,  _
                    ByVal floTgBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floTgBodyFatSpecified As Boolean,  _
                    ByVal floFtWaistline As System.Nullable(Of Decimal),  _
                    ByVal floFtWaistlineSpecified As Boolean,  _
                    ByVal floTgWaistline As System.Nullable(Of Decimal),  _
                    ByVal floTgWaistlineSpecified As Boolean,  _
                    ByVal floFtButtocks As System.Nullable(Of Decimal),  _
                    ByVal floFtButtocksSpecified As Boolean,  _
                    ByVal floTgButtocks As System.Nullable(Of Decimal),  _
                    ByVal floTgButtocksSpecified As Boolean,  _
                    ByVal intSportCount As Integer,  _
                    ByVal intSportCountSpecified As Boolean,  _
                    ByVal intSportOneMin As Integer,  _
                    ByVal intSportOneMinSpecified As Boolean,  _
                    ByVal datBreakfristST As String,  _
                    ByVal datBreakfristET As String,  _
                    ByVal datLunchST As String,  _
                    ByVal datLunchET As String,  _
                    ByVal datDinnerST As String,  _
                    ByVal datDinnerET As String,  _
                    ByVal datForbiddenST1 As String,  _
                    ByVal datForbiddenET1 As String,  _
                    ByVal datForbiddenST2 As String,  _
                    ByVal datForbiddenET2 As String,  _
                    ByVal intActivity As Integer,  _
                    ByVal intActivitySpecified As Boolean,  _
                    ByVal intReducingCalorie As Integer,  _
                    ByVal intReducingCalorieSpecified As Boolean,  _
                    ByVal userState As Object)
            If (Me.WS_UpdateMemberPlanOperationCompleted Is Nothing) Then
                Me.WS_UpdateMemberPlanOperationCompleted = AddressOf Me.OnWS_UpdateMemberPlanOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateMemberPlan", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, bolisMale, bolisMaleSpecified, floHeight, floHeightSpecified, datStartdate, datEnddate, floFtweight, floFtweightSpecified, floTgweight, floTgweightSpecified, floFtBodyFat, floFtBodyFatSpecified, floTgBodyFat, floTgBodyFatSpecified, floFtWaistline, floFtWaistlineSpecified, floTgWaistline, floTgWaistlineSpecified, floFtButtocks, floFtButtocksSpecified, floTgButtocks, floTgButtocksSpecified, intSportCount, intSportCountSpecified, intSportOneMin, intSportOneMinSpecified, datBreakfristST, datBreakfristET, datLunchST, datLunchET, datDinnerST, datDinnerET, datForbiddenST1, datForbiddenET1, datForbiddenST2, datForbiddenET2, intActivity, intActivitySpecified, intReducingCalorie, intReducingCalorieSpecified}, Me.WS_UpdateMemberPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateMemberPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateMemberPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateMemberPlanCompleted(Me, New WS_UpdateMemberPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateDietRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateDietRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datUpdateRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intDietTypeSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img1() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img2() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img3() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img4() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img5() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img6() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img7() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img8() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img9() As Byte,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateDietRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, datUpdateRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateDietRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal datUpdateRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    ByVal intDietTypeSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte)
            Me.WS_UpdateDietRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, datUpdateRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateDietRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal datUpdateRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    ByVal intDietTypeSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte,  _
                    ByVal userState As Object)
            If (Me.WS_UpdateDietRecordOperationCompleted Is Nothing) Then
                Me.WS_UpdateDietRecordOperationCompleted = AddressOf Me.OnWS_UpdateDietRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateDietRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, datUpdateRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9}, Me.WS_UpdateDietRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateDietRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateDietRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateDietRecordCompleted(Me, New WS_UpdateDietRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddDietRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddDietRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intDietTypeSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img1() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img2() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img3() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img4() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img5() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img6() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img7() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img8() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img9() As Byte,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddDietRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddDietRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    ByVal intDietTypeSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte)
            Me.WS_AddDietRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddDietRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intDietType As Integer,  _
                    ByVal intDietTypeSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte,  _
                    ByVal userState As Object)
            If (Me.WS_AddDietRecordOperationCompleted Is Nothing) Then
                Me.WS_AddDietRecordOperationCompleted = AddressOf Me.OnWS_AddDietRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_AddDietRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intDietType, intDietTypeSpecified, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9}, Me.WS_AddDietRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddDietRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddDietRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddDietRecordCompleted(Me, New WS_AddDietRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddBloodSugar", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddBloodSugar(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String, ByVal intServerID As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String, ByVal intConsistency As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intTypeIDSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddBloodSugar", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodSugarAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datRecordTime As String, ByVal intConsistency As Integer, ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, ByVal intTypeIDSpecified As Boolean, ByVal strMemo As String)
            Me.WS_AddBloodSugarAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodSugarAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datRecordTime As String, ByVal intConsistency As Integer, ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, ByVal intTypeIDSpecified As Boolean, ByVal strMemo As String, ByVal userState As Object)
            If (Me.WS_AddBloodSugarOperationCompleted Is Nothing) Then
                Me.WS_AddBloodSugarOperationCompleted = AddressOf Me.OnWS_AddBloodSugarOperationCompleted
            End If
            Me.InvokeAsync("WS_AddBloodSugar", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo}, Me.WS_AddBloodSugarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddBloodSugarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddBloodSugarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddBloodSugarCompleted(Me, New WS_AddBloodSugarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddSleepRecords", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddSleepRecords( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datStartTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datEndTime As String,  _
                    ByVal intDeepMinutes As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intDeepMinutesSpecified As Boolean,  _
                    ByVal intLightMinutes As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intLightMinutesSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strSleepRawData As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddSleepRecords", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datStartTime, datEndTime, intDeepMinutes, intDeepMinutesSpecified, intLightMinutes, intLightMinutesSpecified, strSleepRawData, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddSleepRecordsAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datStartTime As String, ByVal datEndTime As String, ByVal intDeepMinutes As Integer, ByVal intDeepMinutesSpecified As Boolean, ByVal intLightMinutes As Integer, ByVal intLightMinutesSpecified As Boolean, ByVal strSleepRawData As String, ByVal strMemo As String)
            Me.WS_AddSleepRecordsAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datStartTime, datEndTime, intDeepMinutes, intDeepMinutesSpecified, intLightMinutes, intLightMinutesSpecified, strSleepRawData, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddSleepRecordsAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datStartTime As String, ByVal datEndTime As String, ByVal intDeepMinutes As Integer, ByVal intDeepMinutesSpecified As Boolean, ByVal intLightMinutes As Integer, ByVal intLightMinutesSpecified As Boolean, ByVal strSleepRawData As String, ByVal strMemo As String, ByVal userState As Object)
            If (Me.WS_AddSleepRecordsOperationCompleted Is Nothing) Then
                Me.WS_AddSleepRecordsOperationCompleted = AddressOf Me.OnWS_AddSleepRecordsOperationCompleted
            End If
            Me.InvokeAsync("WS_AddSleepRecords", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datStartTime, datEndTime, intDeepMinutes, intDeepMinutesSpecified, intLightMinutes, intLightMinutesSpecified, strSleepRawData, strMemo}, Me.WS_AddSleepRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddSleepRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddSleepRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddSleepRecordsCompleted(Me, New WS_AddSleepRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_CreateNewUser", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_CreateNewUser( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strDisplayName As String,  _
                    ByVal bolisMale As Boolean,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal bolisMaleSpecified As Boolean,  _
                    ByVal bolisAgreement As Boolean,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal bolisAgreementSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strCell As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strEMail As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPassword As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal photo() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strBirthday As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strAddSecCode As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strCommunityCode As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intUserID As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intUserIDSpecified As Boolean,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_CreateNewUser", New Object() {strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, bolisAgreement, bolisAgreementSpecified, strCell, strEMail, strPassword, photo, strBirthday, strAddSecCode, strCommunityCode, intUserID, intUserIDSpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_CreateNewUserAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strDisplayName As String,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal bolisAgreement As Boolean,  _
                    ByVal bolisAgreementSpecified As Boolean,  _
                    ByVal strCell As String,  _
                    ByVal strEMail As String,  _
                    ByVal strPassword As String,  _
                    ByVal photo() As Byte,  _
                    ByVal strBirthday As String,  _
                    ByVal strAddSecCode As String,  _
                    ByVal strCommunityCode As String,  _
                    ByVal intUserID As System.Nullable(Of Decimal),  _
                    ByVal intUserIDSpecified As Boolean)
            Me.WS_CreateNewUserAsync(strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, bolisAgreement, bolisAgreementSpecified, strCell, strEMail, strPassword, photo, strBirthday, strAddSecCode, strCommunityCode, intUserID, intUserIDSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_CreateNewUserAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strDisplayName As String,  _
                    ByVal bolisMale As Boolean,  _
                    ByVal bolisMaleSpecified As Boolean,  _
                    ByVal bolisAgreement As Boolean,  _
                    ByVal bolisAgreementSpecified As Boolean,  _
                    ByVal strCell As String,  _
                    ByVal strEMail As String,  _
                    ByVal strPassword As String,  _
                    ByVal photo() As Byte,  _
                    ByVal strBirthday As String,  _
                    ByVal strAddSecCode As String,  _
                    ByVal strCommunityCode As String,  _
                    ByVal intUserID As System.Nullable(Of Decimal),  _
                    ByVal intUserIDSpecified As Boolean,  _
                    ByVal userState As Object)
            If (Me.WS_CreateNewUserOperationCompleted Is Nothing) Then
                Me.WS_CreateNewUserOperationCompleted = AddressOf Me.OnWS_CreateNewUserOperationCompleted
            End If
            Me.InvokeAsync("WS_CreateNewUser", New Object() {strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, bolisAgreement, bolisAgreementSpecified, strCell, strEMail, strPassword, photo, strBirthday, strAddSecCode, strCommunityCode, intUserID, intUserIDSpecified}, Me.WS_CreateNewUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_CreateNewUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_CreateNewUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_CreateNewUserCompleted(Me, New WS_CreateNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddEarTemperature", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddEarTemperature(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floatTemperature As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intUnitSpecified As Boolean, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddEarTemperature", New Object() {strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddEarTemperatureAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal floatTemperature As System.Nullable(Of Decimal), ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, ByVal intUnitSpecified As Boolean)
            Me.WS_AddEarTemperatureAsync(strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddEarTemperatureAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal floatTemperature As System.Nullable(Of Decimal), ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, ByVal intUnitSpecified As Boolean, ByVal userState As Object)
            If (Me.WS_AddEarTemperatureOperationCompleted Is Nothing) Then
                Me.WS_AddEarTemperatureOperationCompleted = AddressOf Me.OnWS_AddEarTemperatureOperationCompleted
            End If
            Me.InvokeAsync("WS_AddEarTemperature", New Object() {strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified}, Me.WS_AddEarTemperatureOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddEarTemperatureOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddEarTemperatureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddEarTemperatureCompleted(Me, New WS_AddEarTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateWeightRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateWeightRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floButtocksSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floRateOfBoneSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floSoftLeanMassSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTotalBodyWaterSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateWeightRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateWeightRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_UpdateWeightRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateWeightRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_UpdateWeightRecordOperationCompleted Is Nothing) Then
                Me.WS_UpdateWeightRecordOperationCompleted = AddressOf Me.OnWS_UpdateWeightRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateWeightRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo}, Me.WS_UpdateWeightRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateWeightRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateWeightRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateWeightRecordCompleted(Me, New WS_UpdateWeightRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddWeightRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddWeightRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWeight As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWeightSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floBodyFatSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floWaistline As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floWaistlineSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floButtocks As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floButtocksSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floRateOfBoneSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floSoftLeanMassSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floTotalBodyWaterSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddWeightRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddWeightRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_AddWeightRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddWeightRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal floWeight As System.Nullable(Of Decimal),  _
                    ByVal floWeightSpecified As Boolean,  _
                    ByVal floBodyFat As System.Nullable(Of Decimal),  _
                    ByVal floBodyFatSpecified As Boolean,  _
                    ByVal floWaistline As System.Nullable(Of Decimal),  _
                    ByVal floWaistlineSpecified As Boolean,  _
                    ByVal floButtocks As System.Nullable(Of Decimal),  _
                    ByVal floButtocksSpecified As Boolean,  _
                    ByVal floRateOfBone As System.Nullable(Of Decimal),  _
                    ByVal floRateOfBoneSpecified As Boolean,  _
                    ByVal floSoftLeanMass As System.Nullable(Of Decimal),  _
                    ByVal floSoftLeanMassSpecified As Boolean,  _
                    ByVal floTotalBodyWater As System.Nullable(Of Decimal),  _
                    ByVal floTotalBodyWaterSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_AddWeightRecordOperationCompleted Is Nothing) Then
                Me.WS_AddWeightRecordOperationCompleted = AddressOf Me.OnWS_AddWeightRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_AddWeightRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, floWeight, floWeightSpecified, floBodyFat, floBodyFatSpecified, floWaistline, floWaistlineSpecified, floButtocks, floButtocksSpecified, floRateOfBone, floRateOfBoneSpecified, floSoftLeanMass, floSoftLeanMassSpecified, floTotalBodyWater, floTotalBodyWaterSpecified, strMemo}, Me.WS_AddWeightRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddWeightRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddWeightRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddWeightRecordCompleted(Me, New WS_AddWeightRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_SignUpload", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_SignUpload(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal hospital As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal signId As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal photo() As Byte) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("WS_SignUpload", New Object() {hospital, signId, photo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_SignUploadAsync(ByVal hospital As String, ByVal signId As String, ByVal photo() As Byte)
            Me.WS_SignUploadAsync(hospital, signId, photo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_SignUploadAsync(ByVal hospital As String, ByVal signId As String, ByVal photo() As Byte, ByVal userState As Object)
            If (Me.WS_SignUploadOperationCompleted Is Nothing) Then
                Me.WS_SignUploadOperationCompleted = AddressOf Me.OnWS_SignUploadOperationCompleted
            End If
            Me.InvokeAsync("WS_SignUpload", New Object() {hospital, signId, photo}, Me.WS_SignUploadOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_SignUploadOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_SignUploadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_SignUploadCompleted(Me, New WS_SignUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_GetUv", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_GetUv(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal hospital As String, ByVal recno As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal recnoSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("WS_GetUv", New Object() {hospital, recno, recnoSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_GetUvAsync(ByVal hospital As String, ByVal recno As Integer, ByVal recnoSpecified As Boolean)
            Me.WS_GetUvAsync(hospital, recno, recnoSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_GetUvAsync(ByVal hospital As String, ByVal recno As Integer, ByVal recnoSpecified As Boolean, ByVal userState As Object)
            If (Me.WS_GetUvOperationCompleted Is Nothing) Then
                Me.WS_GetUvOperationCompleted = AddressOf Me.OnWS_GetUvOperationCompleted
            End If
            Me.InvokeAsync("WS_GetUv", New Object() {hospital, recno, recnoSpecified}, Me.WS_GetUvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_GetUvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_GetUvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_GetUvCompleted(Me, New WS_GetUvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateBloodSugar", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateBloodSugar(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String, ByVal intServerID As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String, ByVal intConsistency As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intTypeIDSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateBloodSugar", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateBloodSugarAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datRecordTime As String, ByVal intConsistency As Integer, ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, ByVal intTypeIDSpecified As Boolean, ByVal strMemo As String)
            Me.WS_UpdateBloodSugarAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateBloodSugarAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strUserPassWord As String, ByVal intServerID As Integer, ByVal intServerIDSpecified As Boolean, ByVal datRecordTime As String, ByVal intConsistency As Integer, ByVal intConsistencySpecified As Boolean, ByVal intTypeID As Integer, ByVal intTypeIDSpecified As Boolean, ByVal strMemo As String, ByVal userState As Object)
            If (Me.WS_UpdateBloodSugarOperationCompleted Is Nothing) Then
                Me.WS_UpdateBloodSugarOperationCompleted = AddressOf Me.OnWS_UpdateBloodSugarOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateBloodSugar", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, intTypeID, intTypeIDSpecified, strMemo}, Me.WS_UpdateBloodSugarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateBloodSugarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateBloodSugarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateBloodSugarCompleted(Me, New WS_UpdateBloodSugarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddSportImageRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddSportImageRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportMinutesSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal dubDistance As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intCalorieSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strAutoMeasure As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img1() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img2() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img3() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img4() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img5() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img6() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img7() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img8() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img9() As Byte,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddSportImageRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddSportImageRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    ByVal intSportMinutesSpecified As Boolean,  _
                    ByVal dubDistance As System.Nullable(Of Decimal),  _
                    ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    ByVal intCalorieSpecified As Boolean,  _
                    ByVal strAutoMeasure As String,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte)
            Me.WS_AddSportImageRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddSportImageRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    ByVal intSportMinutesSpecified As Boolean,  _
                    ByVal dubDistance As System.Nullable(Of Decimal),  _
                    ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    ByVal intCalorieSpecified As Boolean,  _
                    ByVal strAutoMeasure As String,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte,  _
                    ByVal userState As Object)
            If (Me.WS_AddSportImageRecordOperationCompleted Is Nothing) Then
                Me.WS_AddSportImageRecordOperationCompleted = AddressOf Me.OnWS_AddSportImageRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_AddSportImageRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9}, Me.WS_AddSportImageRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddSportImageRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddSportImageRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddSportImageRecordCompleted(Me, New WS_AddSportImageRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddForeheadTemperature", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddForeheadTemperature(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floatTemperature As System.Nullable(Of Decimal), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intUnitSpecified As Boolean, ByRef [return] As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddForeheadTemperature", New Object() {strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddForeheadTemperatureAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal floatTemperature As System.Nullable(Of Decimal), ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, ByVal intUnitSpecified As Boolean)
            Me.WS_AddForeheadTemperatureAsync(strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddForeheadTemperatureAsync(ByVal strUserAccount As String, ByVal datRecordTime As String, ByVal floatTemperature As System.Nullable(Of Decimal), ByVal floatTemperatureSpecified As Boolean, ByVal intUnit As Integer, ByVal intUnitSpecified As Boolean, ByVal userState As Object)
            If (Me.WS_AddForeheadTemperatureOperationCompleted Is Nothing) Then
                Me.WS_AddForeheadTemperatureOperationCompleted = AddressOf Me.OnWS_AddForeheadTemperatureOperationCompleted
            End If
            Me.InvokeAsync("WS_AddForeheadTemperature", New Object() {strUserAccount, datRecordTime, floatTemperature, floatTemperatureSpecified, intUnit, intUnitSpecified}, Me.WS_AddForeheadTemperatureOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddForeheadTemperatureOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddForeheadTemperatureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddForeheadTemperatureCompleted(Me, New WS_AddForeheadTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateBloodRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateBloodRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intSystolic As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSystolicSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intDiastolicSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intPulse As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intPulseSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intTypeID As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intTypeIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateBloodRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateBloodRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSystolic As System.Nullable(Of Decimal),  _
                    ByVal intSystolicSpecified As Boolean,  _
                    ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    ByVal intDiastolicSpecified As Boolean,  _
                    ByVal intPulse As System.Nullable(Of Decimal),  _
                    ByVal intPulseSpecified As Boolean,  _
                    ByVal intTypeID As System.Nullable(Of Decimal),  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_UpdateBloodRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateBloodRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSystolic As System.Nullable(Of Decimal),  _
                    ByVal intSystolicSpecified As Boolean,  _
                    ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    ByVal intDiastolicSpecified As Boolean,  _
                    ByVal intPulse As System.Nullable(Of Decimal),  _
                    ByVal intPulseSpecified As Boolean,  _
                    ByVal intTypeID As System.Nullable(Of Decimal),  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_UpdateBloodRecordOperationCompleted Is Nothing) Then
                Me.WS_UpdateBloodRecordOperationCompleted = AddressOf Me.OnWS_UpdateBloodRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateBloodRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo}, Me.WS_UpdateBloodRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateBloodRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateBloodRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateBloodRecordCompleted(Me, New WS_UpdateBloodRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateUser", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateUser( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strDisplayName As String,  _
                    ByVal bolisMale As Boolean,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal bolisMaleSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strCell As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strEMail As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPassword As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal photo() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strOldPwd As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strBirthday As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strAddSecCode As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strCommunityCode As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateUser", New Object() {strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, strCell, strEMail, strPassword, photo, strOldPwd, strBirthday, strAddSecCode, strCommunityCode})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateUserAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strDisplayName As String, ByVal bolisMale As Boolean, ByVal bolisMaleSpecified As Boolean, ByVal strCell As String, ByVal strEMail As String, ByVal strPassword As String, ByVal photo() As Byte, ByVal strOldPwd As String, ByVal strBirthday As String, ByVal strAddSecCode As String, ByVal strCommunityCode As String)
            Me.WS_UpdateUserAsync(strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, strCell, strEMail, strPassword, photo, strOldPwd, strBirthday, strAddSecCode, strCommunityCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateUserAsync(ByVal strPrgID As String, ByVal strPrgPws As String, ByVal strUserAccount As String, ByVal strDisplayName As String, ByVal bolisMale As Boolean, ByVal bolisMaleSpecified As Boolean, ByVal strCell As String, ByVal strEMail As String, ByVal strPassword As String, ByVal photo() As Byte, ByVal strOldPwd As String, ByVal strBirthday As String, ByVal strAddSecCode As String, ByVal strCommunityCode As String, ByVal userState As Object)
            If (Me.WS_UpdateUserOperationCompleted Is Nothing) Then
                Me.WS_UpdateUserOperationCompleted = AddressOf Me.OnWS_UpdateUserOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateUser", New Object() {strPrgID, strPrgPws, strUserAccount, strDisplayName, bolisMale, bolisMaleSpecified, strCell, strEMail, strPassword, photo, strOldPwd, strBirthday, strAddSecCode, strCommunityCode}, Me.WS_UpdateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateUserCompleted(Me, New WS_UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddBloodRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddBloodRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intSystolic As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSystolicSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intDiastolicSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intPulse As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intPulseSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal intTypeID As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intTypeIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddBloodRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSystolic As System.Nullable(Of Decimal),  _
                    ByVal intSystolicSpecified As Boolean,  _
                    ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    ByVal intDiastolicSpecified As Boolean,  _
                    ByVal intPulse As System.Nullable(Of Decimal),  _
                    ByVal intPulseSpecified As Boolean,  _
                    ByVal intTypeID As System.Nullable(Of Decimal),  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_AddBloodRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSystolic As System.Nullable(Of Decimal),  _
                    ByVal intSystolicSpecified As Boolean,  _
                    ByVal intDiastolic As System.Nullable(Of Decimal),  _
                    ByVal intDiastolicSpecified As Boolean,  _
                    ByVal intPulse As System.Nullable(Of Decimal),  _
                    ByVal intPulseSpecified As Boolean,  _
                    ByVal intTypeID As System.Nullable(Of Decimal),  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_AddBloodRecordOperationCompleted Is Nothing) Then
                Me.WS_AddBloodRecordOperationCompleted = AddressOf Me.OnWS_AddBloodRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_AddBloodRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSystolic, intSystolicSpecified, intDiastolic, intDiastolicSpecified, intPulse, intPulseSpecified, intTypeID, intTypeIDSpecified, strMemo}, Me.WS_AddBloodRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddBloodRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddBloodRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddBloodRecordCompleted(Me, New WS_AddBloodRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_AddBloodSugar2", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_AddBloodSugar2( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    ByVal intConsistency As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intConsistencySpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floUricAcid As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floUricAcidSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal floCholesterol As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal floCholesterolSpecified As Boolean,  _
                    ByVal intTypeID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intTypeIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_AddBloodSugar2", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, floUricAcid, floUricAcidSpecified, floCholesterol, floCholesterolSpecified, intTypeID, intTypeIDSpecified, strMemo})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodSugar2Async( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intConsistency As Integer,  _
                    ByVal intConsistencySpecified As Boolean,  _
                    ByVal floUricAcid As System.Nullable(Of Decimal),  _
                    ByVal floUricAcidSpecified As Boolean,  _
                    ByVal floCholesterol As System.Nullable(Of Decimal),  _
                    ByVal floCholesterolSpecified As Boolean,  _
                    ByVal intTypeID As Integer,  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String)
            Me.WS_AddBloodSugar2Async(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, floUricAcid, floUricAcidSpecified, floCholesterol, floCholesterolSpecified, intTypeID, intTypeIDSpecified, strMemo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_AddBloodSugar2Async( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intConsistency As Integer,  _
                    ByVal intConsistencySpecified As Boolean,  _
                    ByVal floUricAcid As System.Nullable(Of Decimal),  _
                    ByVal floUricAcidSpecified As Boolean,  _
                    ByVal floCholesterol As System.Nullable(Of Decimal),  _
                    ByVal floCholesterolSpecified As Boolean,  _
                    ByVal intTypeID As Integer,  _
                    ByVal intTypeIDSpecified As Boolean,  _
                    ByVal strMemo As String,  _
                    ByVal userState As Object)
            If (Me.WS_AddBloodSugar2OperationCompleted Is Nothing) Then
                Me.WS_AddBloodSugar2OperationCompleted = AddressOf Me.OnWS_AddBloodSugar2OperationCompleted
            End If
            Me.InvokeAsync("WS_AddBloodSugar2", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intConsistency, intConsistencySpecified, floUricAcid, floUricAcidSpecified, floCholesterol, floCholesterolSpecified, intTypeID, intTypeIDSpecified, strMemo}, Me.WS_AddBloodSugar2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_AddBloodSugar2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_AddBloodSugar2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_AddBloodSugar2Completed(Me, New WS_AddBloodSugar2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WS_UpdateSportImageRecord", RequestNamespace:="http://webservice", ResponseNamespace:="http://webservice", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WS_UpdateSportImageRecord( _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgID As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrgPws As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserAccount As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intServerIDSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intSportMinutesSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal dubDistance As System.Nullable(Of Decimal),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal intCalorieSpecified As Boolean,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strAutoMeasure As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMemo As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img1() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img2() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img3() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img4() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img5() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img6() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img7() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img8() As Byte,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal img9() As Byte,  _
                    ByRef [return] As Integer,  _
                    <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef returnSpecified As Boolean)
            Dim results() As Object = Me.Invoke("WS_UpdateSportImageRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9})
            [return] = CType(results(0),Integer)
            returnSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateSportImageRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    ByVal intSportMinutesSpecified As Boolean,  _
                    ByVal dubDistance As System.Nullable(Of Decimal),  _
                    ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    ByVal intCalorieSpecified As Boolean,  _
                    ByVal strAutoMeasure As String,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte)
            Me.WS_UpdateSportImageRecordAsync(strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UpdateSportImageRecordAsync( _
                    ByVal strPrgID As String,  _
                    ByVal strPrgPws As String,  _
                    ByVal strUserAccount As String,  _
                    ByVal strUserPassWord As String,  _
                    ByVal intServerID As Integer,  _
                    ByVal intServerIDSpecified As Boolean,  _
                    ByVal datRecordTime As String,  _
                    ByVal intSportType As Integer,  _
                    ByVal intSportTypeSpecified As Boolean,  _
                    ByVal intSportMinutes As Integer,  _
                    ByVal intSportMinutesSpecified As Boolean,  _
                    ByVal dubDistance As System.Nullable(Of Decimal),  _
                    ByVal dubDistanceSpecified As Boolean,  _
                    ByVal intFootSteps As Integer,  _
                    ByVal intFootStepsSpecified As Boolean,  _
                    ByVal intCalorie As Integer,  _
                    ByVal intCalorieSpecified As Boolean,  _
                    ByVal strAutoMeasure As String,  _
                    ByVal strMemo As String,  _
                    ByVal img1() As Byte,  _
                    ByVal img2() As Byte,  _
                    ByVal img3() As Byte,  _
                    ByVal img4() As Byte,  _
                    ByVal img5() As Byte,  _
                    ByVal img6() As Byte,  _
                    ByVal img7() As Byte,  _
                    ByVal img8() As Byte,  _
                    ByVal img9() As Byte,  _
                    ByVal userState As Object)
            If (Me.WS_UpdateSportImageRecordOperationCompleted Is Nothing) Then
                Me.WS_UpdateSportImageRecordOperationCompleted = AddressOf Me.OnWS_UpdateSportImageRecordOperationCompleted
            End If
            Me.InvokeAsync("WS_UpdateSportImageRecord", New Object() {strPrgID, strPrgPws, strUserAccount, strUserPassWord, intServerID, intServerIDSpecified, datRecordTime, intSportType, intSportTypeSpecified, intSportMinutes, intSportMinutesSpecified, dubDistance, dubDistanceSpecified, intFootSteps, intFootStepsSpecified, intCalorie, intCalorieSpecified, strAutoMeasure, strMemo, img1, img2, img3, img4, img5, img6, img7, img8, img9}, Me.WS_UpdateSportImageRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UpdateSportImageRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UpdateSportImageRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UpdateSportImageRecordCompleted(Me, New WS_UpdateSportImageRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddDxPatchCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddDxPatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddDxPatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddWeightRecord2CompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddWeightRecord2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddWeightRecord2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddRingRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddRingRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddRingRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddMemberPlanCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddMemberPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddMemberPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateMemberPlanCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateMemberPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateMemberPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateDietRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateDietRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateDietRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddDietRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddDietRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddDietRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddBloodSugarCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddBloodSugarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddBloodSugarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddSleepRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddSleepRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddSleepRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_CreateNewUserCompletedEventHandler(ByVal sender As Object, ByVal e As WS_CreateNewUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_CreateNewUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddEarTemperatureCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddEarTemperatureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddEarTemperatureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateWeightRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateWeightRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateWeightRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddWeightRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddWeightRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddWeightRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_SignUploadCompletedEventHandler(ByVal sender As Object, ByVal e As WS_SignUploadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_SignUploadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_GetUvCompletedEventHandler(ByVal sender As Object, ByVal e As WS_GetUvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_GetUvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateBloodSugarCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateBloodSugarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateBloodSugarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddSportImageRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddSportImageRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddSportImageRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddForeheadTemperatureCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddForeheadTemperatureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddForeheadTemperatureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateBloodRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateBloodRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateBloodRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateUserCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddBloodRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddBloodRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddBloodRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_AddBloodSugar2CompletedEventHandler(ByVal sender As Object, ByVal e As WS_AddBloodSugar2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_AddBloodSugar2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub WS_UpdateSportImageRecordCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UpdateSportImageRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UpdateSportImageRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property [return]() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
End Namespace
